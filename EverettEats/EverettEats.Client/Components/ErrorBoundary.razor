@using Microsoft.AspNetCore.Components.Web
@namespace EverettEats.Client.Components

<div class="error-boundary">
    @if (HasError)
    {
        <div class="error-content">
            <h3>ðŸš¨ Something went wrong</h3>
            <p>An unexpected error occurred. Please try refreshing the page.</p>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <details>
                    <summary>Error Details</summary>
                    <pre>@ErrorMessage</pre>
                </details>
            }
            <button @onclick="Recover" class="error-retry-btn">
                Try Again
            </button>
        </div>
    }
    else
    {
        @ChildContent
    }
</div>

<style>
    .error-boundary {
        padding: 1rem;
    }
    
    .error-content {
        text-align: center;
        padding: 2rem;
        background: #ffebee;
        border: 1px solid #f44336;
        border-radius: 0.5rem;
        color: #c62828;
    }
    
    .error-retry-btn {
        background: #b45309;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        cursor: pointer;
        margin-top: 1rem;
    }
    
    .error-retry-btn:hover {
        background: #8b3a00;
    }
    
    details {
        margin-top: 1rem;
        text-align: left;
    }
    
    pre {
        background: #f5f5f5;
        padding: 1rem;
        border-radius: 0.25rem;
        overflow-x: auto;
        font-size: 0.875rem;
    }
</style>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    private bool HasError { get; set; }
    private string? ErrorMessage { get; set; }

    protected override void OnParametersSet()
    {
        HasError = false;
        ErrorMessage = null;
    }

    public void HandleException(Exception exception)
    {
        HasError = true;
        ErrorMessage = exception.ToString();
        Console.WriteLine($"Error boundary caught: {exception}");
        StateHasChanged();
    }

    private void Recover()
    {
        HasError = false;
        ErrorMessage = null;
        StateHasChanged();
    }
}

@page "/recipe/{slug}"
@rendermode RenderMode.InteractiveWebAssembly
@using EverettEats.Client.Models
@using EverettEats.Client.Services
@inject IRecipeService RecipeService
@inject IJSRuntime JSRuntime

@if (isLoading)
{
    <LoadingSpinner Text="Loading recipe..." />
}
else if (recipe != null)
{    <PageTitle>@recipe.Title - Everett Eats</PageTitle>
    <HeadContent>
        <meta name="description" content="@recipe.Description" />
        <meta property="og:title" content="@recipe.Title" />
        <meta property="og:description" content="@recipe.Description" />
        <meta property="og:image" content="@recipe.ImageUrl" />
        <meta property="og:type" content="article" />
    </HeadContent>
    
    <div class="recipe-detail">
        <div class="recipe-header">
            <div class="button-group">
                <a href="/" class="back-btn">← Back to Recipes</a>
                <button class="share-btn" @onclick="ShareRecipe">
                    Share
                </button>
            </div>
        </div>
        
        <div class="recipe-content">
            <div class="recipe-image">
                <img src="@recipe.ImageUrl" alt="@recipe.Title" style="width: 100%; max-width: 400px; height: auto; border-radius: 0.5rem; margin: 0 auto; display: block;" />
            </div>
            
            <div class="recipe-info">
                <h1 class="recipe-title">@recipe.Title</h1>
                <p class="recipe-description">@recipe.Description</p>

                <div class="recipe-meta" style="display: grid; grid-template-columns: 1fr 1fr; gap: 0.5rem; margin: 1rem 0;">
                    <div class="meta-item">
                        <span class="meta-label">Prep Time:</span>
                        <span>@recipe.PrepTime</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Cook Time:</span>
                        <span>@recipe.CookTime</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Total Time:</span>
                        <span>@recipe.TotalTime</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Servings:</span>
                        <span>@recipe.Servings</span>
                    </div>
                </div>

                <div class="recipe-tags">
                    @foreach (var tag in recipe.Tags)
                    {
                        <span class="tag">@tag</span>
                    }
                </div>
            </div>
        </div>

        <div class="recipe-sections">
            <div class="ingredients-section">
                <h2>Ingredients</h2>
                <ul class="ingredients-list">
                    @foreach (var ingredient in recipe.Ingredients)
                    {
                        <li>@ingredient</li>
                    }
                </ul>
            </div>

            <div class="instructions-section">
                <h2>Instructions</h2>
                <ol class="instructions-list">
                    @foreach (var instruction in recipe.Instructions)
                    {
                        <li>@instruction</li>
                    }
                </ol>
            </div>

            @if (recipe.Tips.Any())
            {
                <div class="tips-section">
                    <h2>Pro Tips</h2>
                    <ul class="tips-list">
                        @foreach (var tip in recipe.Tips)
                        {
                            <li>@tip</li>
                        }
                    </ul>
                </div>            }
        </div>

        <div class="recipe-footer">
            <p>Recipe added on @recipe.DateAdded.ToString("MMMM dd, yyyy")</p>
        </div>
    </div>
}
else
{
    <PageTitle>Recipe Not Found - Everett Eats</PageTitle>
    <div class="not-found">
        <h1>Recipe Not Found</h1>
        <p>The recipe you're looking for doesn't exist.</p>
        <a href="/" class="back-btn">← Back to Recipes</a>
    </div>
}

@code {
    [Parameter] public string Slug { get; set; } = string.Empty;

    private Recipe? recipe;
    private bool isLoading = true;    protected override async Task OnInitializedAsync()
    {
        recipe = await RecipeService.GetRecipeBySlugAsync(Slug);
        isLoading = false;
    }

    private async Task ShareRecipe()
    {
        if (recipe != null)
        {
            var url = $"{await JSRuntime.InvokeAsync<string>("eval", "window.location.origin")}/recipe/{recipe.Slug}";
            var title = $"{recipe.Title} - Everett Eats";
            var text = $"Check out this delicious {recipe.Title} recipe! {recipe.Description}";

            await JSRuntime.InvokeVoidAsync("EverettEats.shareRecipe", title, text, url);
        }
    }
}
